(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{x04h:function(e,t,n){"use strict";n.r(t),n.d(t,"MapsModule",(function(){return de}));var i=n("dpI+"),s=n("fXoL"),r=n("HDdC"),o=n("2Vo4"),a=n("Cfvw"),l=n("PqYM"),h=(n("XNiG"),n("DH7j")),u=n("n6bG"),c=n("lJxs"),d=n("VRyK"),p=n("jtHE");n("quSY"),n("8Qeq"),n("z+Ro"),n("LRne"),n("z6cu");var g=n("5+tZ"),m=n("l7GE"),b=n("ZUHj");class _{constructor(e){this.notifier=e}call(e,t){const n=new f(e),i=t.subscribe(n);return i.add(Object(b.a)(n,this.notifier)),i}}class f extends m.a{constructor(){super(...arguments),this.hasValue=!1}_next(e){this.value=e,this.hasValue=!0}notifyNext(e,t,n,i,s){this.emitValue()}notifyComplete(){this.emitValue()}emitValue(){this.hasValue&&(this.hasValue=!1,this.destination.next(this.value))}}var v=n("eIep"),y=n("UXun"),C=(n("/uUt"),n("1G5W"),n("JX91")),w=n("zP0r"),k=(n("oB13"),n("ofXK"));const O=["*"];let M=(()=>{let e=class{};return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),E=(()=>{let e=class{constructor(e,t){this._loader=e,this._zone=t,this._map=new Promise(e=>{this._mapResolver=e})}createMap(e,t){return this._zone.runOutsideAngular(()=>this._loader.load().then(()=>{const n=new google.maps.Map(e,t);this._mapResolver(n)}))}setMapOptions(e){return this._zone.runOutsideAngular(()=>{this._map.then(t=>{t.setOptions(e)})})}createMarker(e={},t=!0){return this._zone.runOutsideAngular(()=>this._map.then(n=>(t&&(e.map=n),new google.maps.Marker(e))))}createInfoWindow(e){return this._zone.runOutsideAngular(()=>this._map.then(()=>new google.maps.InfoWindow(e)))}createCircle(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>("string"==typeof e.strokePosition&&(e.strokePosition=google.maps.StrokePosition[e.strokePosition]),e.map=t,new google.maps.Circle(e))))}createRectangle(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>(e.map=t,new google.maps.Rectangle(e))))}createPolyline(e){return this._zone.runOutsideAngular(()=>this.getNativeMap().then(t=>{let n=new google.maps.Polyline(e);return n.setMap(t),n}))}createPolygon(e){return this._zone.runOutsideAngular(()=>this.getNativeMap().then(t=>{let n=new google.maps.Polygon(e);return n.setMap(t),n}))}createDataLayer(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>{let n=new google.maps.Data(e);return n.setMap(t),n}))}createTransitLayer(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>{let n=new google.maps.TransitLayer;return n.setMap(e.visible?t:null),n}))}createBicyclingLayer(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>{let n=new google.maps.BicyclingLayer;return n.setMap(e.visible?t:null),n}))}containsLocation(e,t){return google.maps.geometry.poly.containsLocation(e,t)}subscribeToMapEvent(e){return new r.a(t=>{this._map.then(n=>{n.addListener(e,e=>{this._zone.run(()=>t.next(e))})})})}clearInstanceListeners(){return this._zone.runOutsideAngular(()=>{this._map.then(e=>{google.maps.event.clearInstanceListeners(e)})})}setCenter(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>t.setCenter(e)))}getZoom(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getZoom()))}getBounds(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getBounds()))}getMapTypeId(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getMapTypeId()))}setZoom(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>t.setZoom(e)))}getCenter(){return this._zone.runOutsideAngular(()=>this._map.then(e=>e.getCenter()))}panTo(e){return this._zone.runOutsideAngular(()=>this._map.then(t=>t.panTo(e)))}panBy(e,t){return this._zone.runOutsideAngular(()=>this._map.then(n=>n.panBy(e,t)))}fitBounds(e,t){return this._zone.runOutsideAngular(()=>this._map.then(n=>n.fitBounds(e,t)))}panToBounds(e,t){return this._zone.runOutsideAngular(()=>this._map.then(n=>n.panToBounds(e,t)))}getNativeMap(){return this._map}triggerMapEvent(e){return this._map.then(t=>google.maps.event.trigger(t,e))}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](M),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),I=(()=>{let e=class{constructor(e){this._wrapper=e,this._layers=new Map}addTransitLayer(e,t){const n=this._wrapper.createTransitLayer(t);this._layers.set(e,n)}addBicyclingLayer(e,t){const n=this._wrapper.createBicyclingLayer(t);this._layers.set(e,n)}deleteLayer(e){return this._layers.get(e).then(t=>{t.setMap(null),this._layers.delete(e)})}toggleLayerVisibility(e,t){return this._layers.get(e).then(e=>t.visible?this._wrapper.getNativeMap().then(t=>{e.setMap(t)}):void e.setMap(null))}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),P=(()=>{let e=class{constructor(e,t){this._apiWrapper=e,this._zone=t,this._circles=new Map}addCircle(e){this._circles.set(e,this._apiWrapper.createCircle({center:{lat:e.latitude,lng:e.longitude},clickable:e.clickable,draggable:e.draggable,editable:e.editable,fillColor:e.fillColor,fillOpacity:e.fillOpacity,radius:e.radius,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokePosition:e.strokePosition,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex}))}removeCircle(e){return this._circles.get(e).then(t=>{t.setMap(null),this._circles.delete(e)})}setOptions(e,t){return this._circles.get(e).then(e=>{"string"==typeof t.strokePosition&&(t.strokePosition=google.maps.StrokePosition[t.strokePosition]),e.setOptions(t)})}getBounds(e){return this._circles.get(e).then(e=>e.getBounds())}getCenter(e){return this._circles.get(e).then(e=>e.getCenter())}getRadius(e){return this._circles.get(e).then(e=>e.getRadius())}setCenter(e){return this._circles.get(e).then(t=>t.setCenter({lat:e.latitude,lng:e.longitude}))}setEditable(e){return this._circles.get(e).then(t=>t.setEditable(e.editable))}setDraggable(e){return this._circles.get(e).then(t=>t.setDraggable(e.draggable))}setVisible(e){return this._circles.get(e).then(t=>t.setVisible(e.visible))}setRadius(e){return this._circles.get(e).then(t=>t.setRadius(e.radius))}getNativeCircle(e){return this._circles.get(e)}createEventObservable(e,t){return new r.a(n=>{let i=null;return this._circles.get(t).then(t=>{i=t.addListener(e,e=>this._zone.run(()=>n.next(e)))}),()=>{null!==i&&i.remove()}})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),z=(()=>{let e=class{constructor(e,t){this._wrapper=e,this._zone=t,this._layers=new Map}addDataLayer(e){const t=this._wrapper.createDataLayer({style:e.style}).then(t=>(e.geoJson&&this.getDataFeatures(t,e.geoJson).then(e=>t.features=e),t));this._layers.set(e,t)}deleteDataLayer(e){this._layers.get(e).then(t=>{t.setMap(null),this._layers.delete(e)})}updateGeoJson(e,t){this._layers.get(e).then(e=>{e.forEach((function(t){e.remove(t);var n=e.features.indexOf(t,0);n>-1&&e.features.splice(n,1)})),this.getDataFeatures(e,t).then(t=>e.features=t)})}setDataOptions(e,t){this._layers.get(e).then(e=>{e.setControlPosition(t.controlPosition),e.setControls(t.controls),e.setDrawingMode(t.drawingMode),e.setStyle(t.style)})}createEventObservable(e,t){return new r.a(n=>{this._layers.get(t).then(t=>{t.addListener(e,e=>this._zone.run(()=>n.next(e)))})})}getDataFeatures(e,t){return new Promise((n,i)=>{if("object"==typeof t)try{n(e.addGeoJson(t))}catch(s){i(s)}else"string"==typeof t?e.loadGeoJson(t,null,n):i("Impossible to extract features from geoJson: wrong argument type")})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})();class W{}let S=(()=>{let e=class{constructor(e){var t;this._boundsChangeSampleTime$=new o.a(200),this._includeInBounds$=new o.a(new Map),this.bounds$=Object(a.a)(e.load()).pipe(Object(g.a)(()=>this._includeInBounds$),(t=this._boundsChangeSampleTime$.pipe(Object(v.a)(e=>Object(l.a)(0,e))),e=>e.lift(new _(t))),Object(c.a)(e=>this._generateBounds(e)),Object(y.a)(1))}_generateBounds(e){const t=new google.maps.LatLngBounds;return e.forEach(e=>t.extend(e)),t}addToBounds(e){const t=this._createIdentifier(e);if(this._includeInBounds$.value.has(t))return;const n=this._includeInBounds$.value;n.set(t,e),this._includeInBounds$.next(n)}removeFromBounds(e){const t=this._includeInBounds$.value;t.delete(this._createIdentifier(e)),this._includeInBounds$.next(t)}changeFitBoundsChangeSampleTime(e){this._boundsChangeSampleTime$.next(e)}getBounds$(){return this.bounds$}_createIdentifier(e){return`${e.lat}+${e.lng}`}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](M))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),j=(()=>{let e=class{constructor(e,t){this._mapsWrapper=e,this._zone=t,this._markers=new Map}convertAnimation(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){return null===e?null:this._mapsWrapper.getNativeMap().then(()=>google.maps.Animation[e])}))}deleteMarker(e){const t=this._markers.get(e);return null==t?Promise.resolve():t.then(t=>this._zone.run(()=>{t.setMap(null),this._markers.delete(e)}))}updateMarkerPosition(e){return this._markers.get(e).then(t=>t.setPosition({lat:e.latitude,lng:e.longitude}))}updateTitle(e){return this._markers.get(e).then(t=>t.setTitle(e.title))}updateLabel(e){return this._markers.get(e).then(t=>{t.setLabel(e.label)})}updateDraggable(e){return this._markers.get(e).then(t=>t.setDraggable(e.draggable))}updateIcon(e){return this._markers.get(e).then(t=>t.setIcon(e.iconUrl))}updateOpacity(e){return this._markers.get(e).then(t=>t.setOpacity(e.opacity))}updateVisible(e){return this._markers.get(e).then(t=>t.setVisible(e.visible))}updateZIndex(e){return this._markers.get(e).then(t=>t.setZIndex(e.zIndex))}updateClickable(e){return this._markers.get(e).then(t=>t.setClickable(e.clickable))}updateAnimation(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){(yield this._markers.get(e)).setAnimation(yield this.convertAnimation(e.animation))}))}addMarker(e){const t=new Promise(t=>Object(i.__awaiter)(this,void 0,void 0,(function*(){return this._mapsWrapper.createMarker({position:{lat:e.latitude,lng:e.longitude},label:e.label,draggable:e.draggable,icon:e.iconUrl,opacity:e.opacity,visible:e.visible,zIndex:e.zIndex,title:e.title,clickable:e.clickable,animation:yield this.convertAnimation(e.animation)}).then(t)})));this._markers.set(e,t)}getNativeMarker(e){return this._markers.get(e)}createEventObservable(e,t){return new r.a(n=>{this._markers.get(t).then(t=>{t.addListener(e,e=>this._zone.run(()=>n.next(e)))})})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),T=(()=>{let e=class{constructor(e,t,n){this._mapsWrapper=e,this._zone=t,this._markerManager=n,this._infoWindows=new Map}deleteInfoWindow(e){const t=this._infoWindows.get(e);return null==t?Promise.resolve():t.then(t=>this._zone.run(()=>{t.close(),this._infoWindows.delete(e)}))}setPosition(e){return this._infoWindows.get(e).then(t=>t.setPosition({lat:e.latitude,lng:e.longitude}))}setZIndex(e){return this._infoWindows.get(e).then(t=>t.setZIndex(e.zIndex))}open(e){return this._infoWindows.get(e).then(t=>null!=e.hostMarker?this._markerManager.getNativeMarker(e.hostMarker).then(e=>this._mapsWrapper.getNativeMap().then(n=>t.open(n,e))):this._mapsWrapper.getNativeMap().then(e=>t.open(e)))}close(e){return this._infoWindows.get(e).then(e=>e.close())}setOptions(e,t){return this._infoWindows.get(e).then(e=>e.setOptions(t))}addInfoWindow(e){const t={content:e.content,maxWidth:e.maxWidth,zIndex:e.zIndex,disableAutoPan:e.disableAutoPan};"number"==typeof e.latitude&&"number"==typeof e.longitude&&(t.position={lat:e.latitude,lng:e.longitude});const n=this._mapsWrapper.createInfoWindow(t);this._infoWindows.set(e,n)}createEventObservable(e,t){return new r.a(n=>{this._infoWindows.get(t).then(t=>{t.addListener(e,e=>this._zone.run(()=>n.next(e)))})})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone),s["\u0275\u0275inject"](j))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})();var x;let A=0,D=(()=>{let e=x=class{constructor(e,t){this._infoWindowManager=e,this._el=t,this.isOpen=!1,this.infoWindowClose=new s.EventEmitter,this._infoWindowAddedToManager=!1,this._id=(A++).toString()}ngOnInit(){this.content=this._el.nativeElement.querySelector(".agm-info-window-content"),this._infoWindowManager.addInfoWindow(this),this._infoWindowAddedToManager=!0,this._updateOpenState(),this._registerEventListeners()}ngOnChanges(e){this._infoWindowAddedToManager&&((e.latitude||e.longitude)&&"number"==typeof this.latitude&&"number"==typeof this.longitude&&this._infoWindowManager.setPosition(this),e.zIndex&&this._infoWindowManager.setZIndex(this),e.isOpen&&this._updateOpenState(),this._setInfoWindowOptions(e))}_registerEventListeners(){this._infoWindowManager.createEventObservable("closeclick",this).subscribe(()=>{this.isOpen=!1,this.infoWindowClose.emit()})}_updateOpenState(){this.isOpen?this.open():this.close()}_setInfoWindowOptions(e){let t={};Object.keys(e).filter(e=>-1!==x._infoWindowOptionsInputs.indexOf(e)).forEach(n=>{t[n]=e[n].currentValue}),this._infoWindowManager.setOptions(this,t)}open(){return this._infoWindowManager.open(this)}close(){return this._infoWindowManager.close(this).then(()=>{this.infoWindowClose.emit()})}id(){return this._id}toString(){return"AgmInfoWindow-"+this._id.toString()}ngOnDestroy(){this._infoWindowManager.deleteInfoWindow(this)}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275directiveInject"](T),s["\u0275\u0275directiveInject"](s.ElementRef))},e.\u0275cmp=s["\u0275\u0275defineComponent"]({type:e,selectors:[["agm-info-window"]],inputs:{isOpen:"isOpen",latitude:"latitude",longitude:"longitude",disableAutoPan:"disableAutoPan",zIndex:"zIndex",maxWidth:"maxWidth"},outputs:{infoWindowClose:"infoWindowClose"},features:[s["\u0275\u0275NgOnChangesFeature"]],ngContentSelectors:O,decls:2,vars:0,consts:[[1,"agm-info-window-content"]],template:function(e,t){1&e&&(s["\u0275\u0275projectionDef"](),s["\u0275\u0275elementStart"](0,"div",0),s["\u0275\u0275projection"](1),s["\u0275\u0275elementEnd"]())},encapsulation:2}),e._infoWindowOptionsInputs=["disableAutoPan","maxWidth"],e})(),L=(()=>{let e=class{constructor(e,t){this._wrapper=e,this._zone=t,this._layers=new Map}addKmlLayer(e){const t=this._wrapper.getNativeMap().then(t=>new google.maps.KmlLayer({clickable:e.clickable,map:t,preserveViewport:e.preserveViewport,screenOverlays:e.screenOverlays,suppressInfoWindows:e.suppressInfoWindows,url:e.url,zIndex:e.zIndex}));this._layers.set(e,t)}setOptions(e,t){this._layers.get(e).then(e=>e.setOptions(t))}deleteKmlLayer(e){this._layers.get(e).then(t=>{t.setMap(null),this._layers.delete(e)})}createEventObservable(e,t){return new r.a(n=>{this._layers.get(t).then(t=>{t.addListener(e,e=>this._zone.run(()=>n.next(e)))})})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})();function B(e){const t=["insert_at","remove_at","set_at"];return function e(t,n,i){return i?e(t,n).pipe(Object(c.a)(e=>Object(h.a)(e)?i(...e):i(e))):new r.a(e=>{const i=(...t)=>e.next(1===t.length?t[0]:t);let s;try{s=t(i)}catch(r){return void e.error(r)}if(Object(u.a)(n))return()=>n(i,s)})}(n=>t.map(t=>e.addListener(t,(i,s)=>n.apply(e,[{newArr:e.getArray(),evName:t,index:i,previous:s}]))),(e,t)=>t.forEach(e=>e.remove()))}let R=(()=>{let e=class{constructor(e,t){this._mapsWrapper=e,this._zone=t,this._polygons=new Map}addPolygon(e){const t=this._mapsWrapper.createPolygon({clickable:e.clickable,draggable:e.draggable,editable:e.editable,fillColor:e.fillColor,fillOpacity:e.fillOpacity,geodesic:e.geodesic,paths:e.paths,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex});this._polygons.set(e,t)}updatePolygon(e){const t=this._polygons.get(e);return null==t?Promise.resolve():t.then(t=>this._zone.run(()=>{t.setPaths(e.paths)}))}setPolygonOptions(e,t){return this._polygons.get(e).then(e=>{e.setOptions(t)})}deletePolygon(e){const t=this._polygons.get(e);return null==t?Promise.resolve():t.then(t=>this._zone.run(()=>{t.setMap(null),this._polygons.delete(e)}))}getPath(e){return this._polygons.get(e).then(e=>e.getPath().getArray())}getPaths(e){return this._polygons.get(e).then(e=>e.getPaths().getArray().map(e=>e.getArray()))}createEventObservable(e,t){return new r.a(n=>{this._polygons.get(t).then(t=>{t.addListener(e,e=>this._zone.run(()=>n.next(e)))})})}createPathEventObservable(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){const t=(yield this._polygons.get(e)).getPaths();return B(t).pipe(Object(C.a)({newArr:t.getArray()}),Object(v.a)(e=>Object(d.a)(...e.newArr.map((t,n)=>B(t).pipe(Object(c.a)(t=>({parentMVEvent:e,chMVCEvent:t,pathIndex:n}))))).pipe(Object(C.a)({parentMVEvent:e,chMVCEvent:null,pathIndex:null}))),Object(w.a)(1),Object(c.a)(({parentMVEvent:e,chMVCEvent:t,pathIndex:n})=>{let i;return t?(i={newArr:e.newArr.map(e=>e.getArray().map(e=>e.toJSON())),pathIndex:n,eventName:t.evName,index:t.index},t.previous&&(i.previous=t.previous)):(i={newArr:e.newArr.map(e=>e.getArray().map(e=>e.toJSON())),eventName:e.evName,index:e.index},e.previous&&(i.previous=e.previous.getArray())),i}))}))}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})();var N;let V=(()=>{let e=N=class{constructor(e,t){this._mapsWrapper=e,this._zone=t,this._polylines=new Map}static _convertPoints(e){return e._getPoints().map(e=>({lat:e.latitude,lng:e.longitude}))}static _convertPath(e){const t=google.maps.SymbolPath[e];return"number"==typeof t?t:e}static _convertIcons(e){const t=e._getIcons().map(e=>({fixedRotation:e.fixedRotation,offset:e.offset,repeat:e.repeat,icon:{anchor:new google.maps.Point(e.anchorX,e.anchorY),fillColor:e.fillColor,fillOpacity:e.fillOpacity,path:N._convertPath(e.path),rotation:e.rotation,scale:e.scale,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokeWeight:e.strokeWeight}}));return t.forEach(e=>{Object.entries(e).forEach(([t,n])=>{void 0===n&&delete e[t]}),void 0!==e.icon.anchor.x&&void 0!==e.icon.anchor.y||delete e.icon.anchor}),t}addPolyline(e){const t=this._mapsWrapper.getNativeMap().then(()=>[N._convertPoints(e),N._convertIcons(e)]).then(([t,n])=>this._mapsWrapper.createPolyline({clickable:e.clickable,draggable:e.draggable,editable:e.editable,geodesic:e.geodesic,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex,path:t,icons:n}));this._polylines.set(e,t)}updatePolylinePoints(e){const t=N._convertPoints(e),n=this._polylines.get(e);return null==n?Promise.resolve():n.then(e=>this._zone.run(()=>{e.setPath(t)}))}updateIconSequences(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){yield this._mapsWrapper.getNativeMap();const t=N._convertIcons(e),n=this._polylines.get(e);if(null!=n)return n.then(e=>this._zone.run(()=>e.setOptions({icons:t})))}))}setPolylineOptions(e,t){return this._polylines.get(e).then(e=>{e.setOptions(t)})}deletePolyline(e){const t=this._polylines.get(e);return null==t?Promise.resolve():t.then(t=>this._zone.run(()=>{t.setMap(null),this._polylines.delete(e)}))}getMVCPath(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){return(yield this._polylines.get(e)).getPath()}))}getPath(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){return(yield this.getMVCPath(e)).getArray()}))}createEventObservable(e,t){return new r.a(n=>{this._polylines.get(t).then(t=>{t.addListener(e,e=>this._zone.run(()=>n.next(e)))})})}createPathEventObservable(e){return Object(i.__awaiter)(this,void 0,void 0,(function*(){return B(yield this.getMVCPath(e))}))}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})(),Z=(()=>{let e=class{constructor(e,t){this._apiWrapper=e,this._zone=t,this._rectangles=new Map}addRectangle(e){this._rectangles.set(e,this._apiWrapper.createRectangle({bounds:{north:e.north,east:e.east,south:e.south,west:e.west},clickable:e.clickable,draggable:e.draggable,editable:e.editable,fillColor:e.fillColor,fillOpacity:e.fillOpacity,strokeColor:e.strokeColor,strokeOpacity:e.strokeOpacity,strokePosition:e.strokePosition,strokeWeight:e.strokeWeight,visible:e.visible,zIndex:e.zIndex}))}removeRectangle(e){return this._rectangles.get(e).then(t=>{t.setMap(null),this._rectangles.delete(e)})}setOptions(e,t){return this._rectangles.get(e).then(e=>e.setOptions(t))}getBounds(e){return this._rectangles.get(e).then(e=>e.getBounds())}setBounds(e){return this._rectangles.get(e).then(t=>t.setBounds({north:e.north,east:e.east,south:e.south,west:e.west}))}setEditable(e){return this._rectangles.get(e).then(t=>t.setEditable(e.editable))}setDraggable(e){return this._rectangles.get(e).then(t=>t.setDraggable(e.draggable))}setVisible(e){return this._rectangles.get(e).then(t=>t.setVisible(e.visible))}createEventObservable(e,t){return r.a.create(n=>{let i=null;return this._rectangles.get(t).then(t=>{i=t.addListener(e,e=>this._zone.run(()=>n.next(e)))}),()=>{null!==i&&i.remove()}})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](E),s["\u0275\u0275inject"](s.NgZone))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})();var U;let $=(()=>{let e=U=class{constructor(e,t,n,i,r){this._elem=e,this._mapsWrapper=t,this._platformId=n,this._fitBoundsService=i,this._zone=r,this.longitude=0,this.latitude=0,this.zoom=8,this.draggable=!0,this.disableDoubleClickZoom=!1,this.disableDefaultUI=!1,this.scrollwheel=!0,this.keyboardShortcuts=!0,this.styles=[],this.usePanning=!1,this.fitBounds=!1,this.scaleControl=!1,this.mapTypeControl=!1,this.panControl=!1,this.rotateControl=!1,this.fullscreenControl=!1,this.mapTypeId="roadmap",this.clickableIcons=!0,this.showDefaultInfoWindow=!0,this.gestureHandling="auto",this.tilt=0,this._observableSubscriptions=[],this.mapClick=new s.EventEmitter,this.mapRightClick=new s.EventEmitter,this.mapDblClick=new s.EventEmitter,this.centerChange=new s.EventEmitter,this.boundsChange=new s.EventEmitter,this.mapTypeIdChange=new s.EventEmitter,this.idle=new s.EventEmitter,this.zoomChange=new s.EventEmitter,this.mapReady=new s.EventEmitter,this.tilesLoaded=new s.EventEmitter}ngOnInit(){if(Object(k.F)(this._platformId))return;const e=this._elem.nativeElement.querySelector(".agm-map-container-inner");this._initMapInstance(e)}_initMapInstance(e){this._mapsWrapper.createMap(e,{center:{lat:this.latitude||0,lng:this.longitude||0},zoom:this.zoom,minZoom:this.minZoom,maxZoom:this.maxZoom,controlSize:this.controlSize,disableDefaultUI:this.disableDefaultUI,disableDoubleClickZoom:this.disableDoubleClickZoom,scrollwheel:this.scrollwheel,backgroundColor:this.backgroundColor,draggable:this.draggable,draggableCursor:this.draggableCursor,draggingCursor:this.draggingCursor,keyboardShortcuts:this.keyboardShortcuts,styles:this.styles,zoomControl:this.zoomControl,zoomControlOptions:this.zoomControlOptions,streetViewControl:this.streetViewControl,streetViewControlOptions:this.streetViewControlOptions,scaleControl:this.scaleControl,scaleControlOptions:this.scaleControlOptions,mapTypeControl:this.mapTypeControl,mapTypeControlOptions:this.mapTypeControlOptions,panControl:this.panControl,panControlOptions:this.panControlOptions,rotateControl:this.rotateControl,rotateControlOptions:this.rotateControlOptions,fullscreenControl:this.fullscreenControl,fullscreenControlOptions:this.fullscreenControlOptions,mapTypeId:this.mapTypeId,clickableIcons:this.clickableIcons,gestureHandling:this.gestureHandling,tilt:this.tilt,restriction:this.restriction}).then(()=>this._mapsWrapper.getNativeMap()).then(e=>this.mapReady.emit(e)),this._handleMapCenterChange(),this._handleMapZoomChange(),this._handleMapMouseEvents(),this._handleBoundsChange(),this._handleMapTypeIdChange(),this._handleTilesLoadedEvent(),this._handleIdleEvent()}ngOnDestroy(){this._observableSubscriptions.forEach(e=>e.unsubscribe()),this._mapsWrapper.clearInstanceListeners(),this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe()}ngOnChanges(e){this._updateMapOptionsChanges(e),this._updatePosition(e)}_updateMapOptionsChanges(e){let t={};Object.keys(e).filter(e=>-1!==U._mapOptionsAttributes.indexOf(e)).forEach(n=>{t[n]=e[n].currentValue}),this._mapsWrapper.setMapOptions(t)}triggerResize(e=!0){return new Promise(t=>{setTimeout(()=>this._mapsWrapper.triggerMapEvent("resize").then(()=>{e&&(null!=this.fitBounds?this._fitBounds():this._setCenter()),t()}))})}_updatePosition(e){(null!=e.latitude||null!=e.longitude||e.fitBounds)&&("fitBounds"in e?this._fitBounds():"number"==typeof this.latitude&&"number"==typeof this.longitude&&this._setCenter())}_setCenter(){let e={lat:this.latitude,lng:this.longitude};this.usePanning?this._mapsWrapper.panTo(e):this._mapsWrapper.setCenter(e)}_fitBounds(){switch(this.fitBounds){case!0:this._subscribeToFitBoundsUpdates();break;case!1:this._fitBoundsSubscription&&this._fitBoundsSubscription.unsubscribe();break;default:this._updateBounds(this.fitBounds,this.fitBoundsPadding)}}_subscribeToFitBoundsUpdates(){this._zone.runOutsideAngular(()=>{this._fitBoundsSubscription=this._fitBoundsService.getBounds$().subscribe(e=>{this._zone.run(()=>this._updateBounds(e,this.fitBoundsPadding))})})}_updateBounds(e,t){if(e){if(this._isLatLngBoundsLiteral(e)&&"undefined"!=typeof google&&google&&google.maps&&google.maps.LatLngBounds){const t=new google.maps.LatLngBounds;t.union(e),e=t}this.usePanning?this._mapsWrapper.panToBounds(e,t):this._mapsWrapper.fitBounds(e,t)}}_isLatLngBoundsLiteral(e){return null!=e&&void 0===e.extend}_handleMapCenterChange(){const e=this._mapsWrapper.subscribeToMapEvent("center_changed").subscribe(()=>{this._mapsWrapper.getCenter().then(e=>{this.latitude=e.lat(),this.longitude=e.lng(),this.centerChange.emit({lat:this.latitude,lng:this.longitude})})});this._observableSubscriptions.push(e)}_handleBoundsChange(){const e=this._mapsWrapper.subscribeToMapEvent("bounds_changed").subscribe(()=>{this._mapsWrapper.getBounds().then(e=>{this.boundsChange.emit(e)})});this._observableSubscriptions.push(e)}_handleMapTypeIdChange(){const e=this._mapsWrapper.subscribeToMapEvent("maptypeid_changed").subscribe(()=>{this._mapsWrapper.getMapTypeId().then(e=>{this.mapTypeIdChange.emit(e)})});this._observableSubscriptions.push(e)}_handleMapZoomChange(){const e=this._mapsWrapper.subscribeToMapEvent("zoom_changed").subscribe(()=>{this._mapsWrapper.getZoom().then(e=>{this.zoom=e,this.zoomChange.emit(e)})});this._observableSubscriptions.push(e)}_handleIdleEvent(){const e=this._mapsWrapper.subscribeToMapEvent("idle").subscribe(()=>{this.idle.emit(void 0)});this._observableSubscriptions.push(e)}_handleTilesLoadedEvent(){const e=this._mapsWrapper.subscribeToMapEvent("tilesloaded").subscribe(()=>this.tilesLoaded.emit(void 0));this._observableSubscriptions.push(e)}_handleMapMouseEvents(){[{name:"click",emitter:this.mapClick},{name:"rightclick",emitter:this.mapRightClick},{name:"dblclick",emitter:this.mapDblClick}].forEach(e=>{const t=this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(t=>{let n={coords:{lat:t.latLng.lat(),lng:t.latLng.lng()},placeId:t.placeId};n.placeId&&!this.showDefaultInfoWindow&&t.stop(),e.emitter.emit(n)});this._observableSubscriptions.push(t)})}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275directiveInject"](s.ElementRef),s["\u0275\u0275directiveInject"](E),s["\u0275\u0275directiveInject"](s.PLATFORM_ID),s["\u0275\u0275directiveInject"](S),s["\u0275\u0275directiveInject"](s.NgZone))},e.\u0275cmp=s["\u0275\u0275defineComponent"]({type:e,selectors:[["agm-map"]],hostVars:2,hostBindings:function(e,t){2&e&&s["\u0275\u0275classProp"]("sebm-google-map-container",!0)},inputs:{longitude:"longitude",latitude:"latitude",zoom:"zoom",draggable:["mapDraggable","draggable"],disableDoubleClickZoom:"disableDoubleClickZoom",disableDefaultUI:"disableDefaultUI",scrollwheel:"scrollwheel",keyboardShortcuts:"keyboardShortcuts",styles:"styles",usePanning:"usePanning",fitBounds:"fitBounds",scaleControl:"scaleControl",mapTypeControl:"mapTypeControl",panControl:"panControl",rotateControl:"rotateControl",fullscreenControl:"fullscreenControl",mapTypeId:"mapTypeId",clickableIcons:"clickableIcons",showDefaultInfoWindow:"showDefaultInfoWindow",gestureHandling:"gestureHandling",tilt:"tilt",minZoom:"minZoom",maxZoom:"maxZoom",controlSize:"controlSize",backgroundColor:"backgroundColor",draggableCursor:"draggableCursor",draggingCursor:"draggingCursor",zoomControl:"zoomControl",zoomControlOptions:"zoomControlOptions",streetViewControl:"streetViewControl",streetViewControlOptions:"streetViewControlOptions",fitBoundsPadding:"fitBoundsPadding",scaleControlOptions:"scaleControlOptions",mapTypeControlOptions:"mapTypeControlOptions",panControlOptions:"panControlOptions",rotateControlOptions:"rotateControlOptions",fullscreenControlOptions:"fullscreenControlOptions",restriction:"restriction"},outputs:{mapClick:"mapClick",mapRightClick:"mapRightClick",mapDblClick:"mapDblClick",centerChange:"centerChange",boundsChange:"boundsChange",mapTypeIdChange:"mapTypeIdChange",idle:"idle",zoomChange:"zoomChange",mapReady:"mapReady",tilesLoaded:"tilesLoaded"},features:[s["\u0275\u0275ProvidersFeature"]([P,z,z,S,E,T,L,I,j,R,V,Z]),s["\u0275\u0275NgOnChangesFeature"]],ngContentSelectors:O,decls:3,vars:0,consts:[[1,"agm-map-container-inner","sebm-google-map-container-inner"],[1,"agm-map-content"]],template:function(e,t){1&e&&(s["\u0275\u0275projectionDef"](),s["\u0275\u0275element"](0,"div",0),s["\u0275\u0275elementStart"](1,"div",1),s["\u0275\u0275projection"](2),s["\u0275\u0275elementEnd"]())},styles:[".agm-map-container-inner[_ngcontent-%COMP%] {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content[_ngcontent-%COMP%] {\n      display:none;\n    }"]}),e._mapOptionsAttributes=["disableDoubleClickZoom","scrollwheel","draggable","draggableCursor","draggingCursor","keyboardShortcuts","zoomControl","zoomControlOptions","styles","streetViewControl","streetViewControlOptions","zoom","mapTypeControl","mapTypeControlOptions","minZoom","maxZoom","panControl","panControlOptions","rotateControl","rotateControlOptions","fullscreenControl","fullscreenControlOptions","scaleControl","scaleControlOptions","mapTypeId","clickableIcons","gestureHandling","tilt","restriction"],e})();var F;let q=0,H=(()=>{let e=F=class{constructor(e){this._markerManager=e,this.draggable=!1,this.visible=!0,this.openInfoWindow=!0,this.opacity=1,this.zIndex=1,this.clickable=!0,this.animationChange=new s.EventEmitter,this.markerClick=new s.EventEmitter,this.markerDblClick=new s.EventEmitter,this.markerRightClick=new s.EventEmitter,this.dragStart=new s.EventEmitter,this.drag=new s.EventEmitter,this.dragEnd=new s.EventEmitter,this.mouseOver=new s.EventEmitter,this.mouseOut=new s.EventEmitter,this.infoWindow=new s.QueryList,this._markerAddedToManger=!1,this._observableSubscriptions=[],this._fitBoundsDetails$=new p.a(1),this._id=(q++).toString()}ngAfterContentInit(){this.handleInfoWindowUpdate(),this.infoWindow.changes.subscribe(()=>this.handleInfoWindowUpdate())}handleInfoWindowUpdate(){if(this.infoWindow.length>1)throw new Error("Expected no more than one info window.");this.infoWindow.forEach(e=>{e.hostMarker=this})}ngOnChanges(e){if("string"==typeof this.latitude&&(this.latitude=Number(this.latitude)),"string"==typeof this.longitude&&(this.longitude=Number(this.longitude)),"number"==typeof this.latitude&&"number"==typeof this.longitude){if(!this._markerAddedToManger)return this._markerManager.addMarker(this),this._updateFitBoundsDetails(),this._markerAddedToManger=!0,void this._addEventListeners();(e.latitude||e.longitude)&&(this._markerManager.updateMarkerPosition(this),this._updateFitBoundsDetails()),e.title&&this._markerManager.updateTitle(this),e.label&&this._markerManager.updateLabel(this),e.draggable&&this._markerManager.updateDraggable(this),e.iconUrl&&this._markerManager.updateIcon(this),e.opacity&&this._markerManager.updateOpacity(this),e.visible&&this._markerManager.updateVisible(this),e.zIndex&&this._markerManager.updateZIndex(this),e.clickable&&this._markerManager.updateClickable(this),e.animation&&this._markerManager.updateAnimation(this)}}getFitBoundsDetails$(){return this._fitBoundsDetails$.asObservable()}_updateFitBoundsDetails(){this._fitBoundsDetails$.next({latLng:{lat:this.latitude,lng:this.longitude}})}_addEventListeners(){const e=this._markerManager.createEventObservable("click",this).subscribe(()=>{this.openInfoWindow&&this.infoWindow.forEach(e=>e.open()),this.markerClick.emit(this)});this._observableSubscriptions.push(e);const t=this._markerManager.createEventObservable("dblclick",this).subscribe(()=>{this.markerDblClick.emit(null)});this._observableSubscriptions.push(t);const n=this._markerManager.createEventObservable("rightclick",this).subscribe(()=>{this.markerRightClick.emit(null)});this._observableSubscriptions.push(n);const i=this._markerManager.createEventObservable("dragstart",this).subscribe(e=>{this.dragStart.emit({coords:{lat:e.latLng.lat(),lng:e.latLng.lng()}})});this._observableSubscriptions.push(i);const s=this._markerManager.createEventObservable("drag",this).subscribe(e=>{this.drag.emit({coords:{lat:e.latLng.lat(),lng:e.latLng.lng()}})});this._observableSubscriptions.push(s);const r=this._markerManager.createEventObservable("dragend",this).subscribe(e=>{this.dragEnd.emit({coords:{lat:e.latLng.lat(),lng:e.latLng.lng()}})});this._observableSubscriptions.push(r);const o=this._markerManager.createEventObservable("mouseover",this).subscribe(e=>{this.mouseOver.emit({coords:{lat:e.latLng.lat(),lng:e.latLng.lng()}})});this._observableSubscriptions.push(o);const a=this._markerManager.createEventObservable("mouseout",this).subscribe(e=>{this.mouseOut.emit({coords:{lat:e.latLng.lat(),lng:e.latLng.lng()}})});this._observableSubscriptions.push(a);const l=this._markerManager.createEventObservable("animation_changed",this).subscribe(()=>{this.animationChange.emit(this.animation)});this._observableSubscriptions.push(l)}id(){return this._id}toString(){return"AgmMarker-"+this._id.toString()}ngOnDestroy(){this._markerManager.deleteMarker(this),this._observableSubscriptions.forEach(e=>e.unsubscribe())}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275directiveInject"](j))},e.\u0275dir=s["\u0275\u0275defineDirective"]({type:e,selectors:[["agm-marker"]],contentQueries:function(e,t,n){var i;1&e&&s["\u0275\u0275contentQuery"](n,D,!1),2&e&&s["\u0275\u0275queryRefresh"](i=s["\u0275\u0275loadQuery"]())&&(t.infoWindow=i)},inputs:{latitude:"latitude",longitude:"longitude",title:"title",label:"label",draggable:["markerDraggable","draggable"],iconUrl:"iconUrl",openInfoWindow:"openInfoWindow",opacity:"opacity",visible:"visible",zIndex:"zIndex",animation:"animation",clickable:["markerClickable","clickable"]},outputs:{markerClick:"markerClick",dragStart:"dragStart",drag:"drag",dragEnd:"dragEnd",mouseOver:"mouseOver",mouseOut:"mouseOut",animationChange:"animationChange",markerDblClick:"markerDblClick",markerRightClick:"markerRightClick"},features:[s["\u0275\u0275ProvidersFeature"]([{provide:W,useExisting:Object(s.forwardRef)(()=>F)}]),s["\u0275\u0275NgOnChangesFeature"]]}),e})(),Q=(()=>{let e=class{ngOnInit(){if(null==this.path)throw new Error("Icon Sequence path is required")}};return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=s["\u0275\u0275defineDirective"]({type:e,selectors:[["agm-icon-sequence"]],inputs:{fixedRotation:"fixedRotation",offset:"offset",repeat:"repeat",anchorX:"anchorX",anchorY:"anchorY",fillColor:"fillColor",fillOpacity:"fillOpacity",path:"path",rotation:"rotation",scale:"scale",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight"}}),e})();var G;let J=(()=>{let e=G=class{constructor(){this.positionChanged=new s.EventEmitter}ngOnChanges(e){(e.latitude||e.longitude)&&this.positionChanged.emit({lat:e.latitude?e.latitude.currentValue:this.latitude,lng:e.longitude?e.longitude.currentValue:this.longitude})}getFitBoundsDetails$(){return this.positionChanged.pipe(Object(C.a)({lat:this.latitude,lng:this.longitude}),Object(c.a)(e=>({latLng:e})))}};return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=s["\u0275\u0275defineDirective"]({type:e,selectors:[["agm-polyline-point"]],inputs:{latitude:"latitude",longitude:"longitude"},outputs:{positionChanged:"positionChanged"},features:[s["\u0275\u0275ProvidersFeature"]([{provide:W,useExisting:Object(s.forwardRef)(()=>G)}]),s["\u0275\u0275NgOnChangesFeature"]]}),e})();var K;let X=0,Y=(()=>{let e=K=class{constructor(e){this._polylineManager=e,this.clickable=!0,this.draggable=!1,this.editable=!1,this.geodesic=!1,this.visible=!0,this.lineClick=new s.EventEmitter,this.lineDblClick=new s.EventEmitter,this.lineDrag=new s.EventEmitter,this.lineDragEnd=new s.EventEmitter,this.lineDragStart=new s.EventEmitter,this.lineMouseDown=new s.EventEmitter,this.lineMouseMove=new s.EventEmitter,this.lineMouseOut=new s.EventEmitter,this.lineMouseOver=new s.EventEmitter,this.lineMouseUp=new s.EventEmitter,this.lineRightClick=new s.EventEmitter,this.polyPathChange=new s.EventEmitter,this._polylineAddedToManager=!1,this._subscriptions=[],this._id=(X++).toString()}ngAfterContentInit(){this.points.length&&this.points.forEach(e=>{const t=e.positionChanged.subscribe(()=>{this._polylineManager.updatePolylinePoints(this)});this._subscriptions.push(t)}),this._polylineAddedToManager||this._init();const e=this.points.changes.subscribe(()=>this._polylineManager.updatePolylinePoints(this));this._subscriptions.push(e),this._polylineManager.updatePolylinePoints(this);const t=this.iconSequences.changes.subscribe(()=>this._polylineManager.updateIconSequences(this));this._subscriptions.push(t)}ngOnChanges(e){if(!this._polylineAddedToManager)return void this._init();let t={};Object.keys(e).filter(e=>-1!==K._polylineOptionsAttributes.indexOf(e)).forEach(n=>t[n]=e[n].currentValue),this._polylineManager.setPolylineOptions(this,t)}getPath(){return this._polylineManager.getPath(this)}_init(){this._polylineManager.addPolyline(this),this._polylineAddedToManager=!0,this._addEventListeners()}_addEventListeners(){[{name:"click",handler:e=>this.lineClick.emit(e)},{name:"dblclick",handler:e=>this.lineDblClick.emit(e)},{name:"drag",handler:e=>this.lineDrag.emit(e)},{name:"dragend",handler:e=>this.lineDragEnd.emit(e)},{name:"dragstart",handler:e=>this.lineDragStart.emit(e)},{name:"mousedown",handler:e=>this.lineMouseDown.emit(e)},{name:"mousemove",handler:e=>this.lineMouseMove.emit(e)},{name:"mouseout",handler:e=>this.lineMouseOut.emit(e)},{name:"mouseover",handler:e=>this.lineMouseOver.emit(e)},{name:"mouseup",handler:e=>this.lineMouseUp.emit(e)},{name:"rightclick",handler:e=>this.lineRightClick.emit(e)}].forEach(e=>{const t=this._polylineManager.createEventObservable(e.name,this).subscribe(e.handler);this._subscriptions.push(t)}),this._polylineManager.createPathEventObservable(this).then(e=>{const t=e.subscribe(e=>this.polyPathChange.emit(e));this._subscriptions.push(t)})}_getPoints(){return this.points?this.points.toArray():[]}_getIcons(){return this.iconSequences?this.iconSequences.toArray():[]}id(){return this._id}ngOnDestroy(){this._polylineManager.deletePolyline(this),this._subscriptions.forEach(e=>e.unsubscribe())}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275directiveInject"](V))},e.\u0275dir=s["\u0275\u0275defineDirective"]({type:e,selectors:[["agm-polyline"]],contentQueries:function(e,t,n){var i;1&e&&(s["\u0275\u0275contentQuery"](n,J,!1),s["\u0275\u0275contentQuery"](n,Q,!1)),2&e&&(s["\u0275\u0275queryRefresh"](i=s["\u0275\u0275loadQuery"]())&&(t.points=i),s["\u0275\u0275queryRefresh"](i=s["\u0275\u0275loadQuery"]())&&(t.iconSequences=i))},inputs:{clickable:"clickable",draggable:["polylineDraggable","draggable"],editable:"editable",geodesic:"geodesic",visible:"visible",strokeColor:"strokeColor",strokeOpacity:"strokeOpacity",strokeWeight:"strokeWeight",zIndex:"zIndex"},outputs:{lineClick:"lineClick",lineDblClick:"lineDblClick",lineDrag:"lineDrag",lineDragEnd:"lineDragEnd",lineDragStart:"lineDragStart",lineMouseDown:"lineMouseDown",lineMouseMove:"lineMouseMove",lineMouseOut:"lineMouseOut",lineMouseOver:"lineMouseOver",lineMouseUp:"lineMouseUp",lineRightClick:"lineRightClick",polyPathChange:"polyPathChange"},features:[s["\u0275\u0275NgOnChangesFeature"]]}),e._polylineOptionsAttributes=["draggable","editable","visible","geodesic","strokeColor","strokeOpacity","strokeWeight","zIndex"],e})();class ee{getNativeWindow(){return window}}class te{getNativeDocument(){return document}}const ne=[ee,te];var ie=function(e){return e[e.HTTP=1]="HTTP",e[e.HTTPS=2]="HTTPS",e[e.AUTO=3]="AUTO",e}({});const se=new s.InjectionToken("angular-google-maps LAZY_MAPS_API_CONFIG");let re=(()=>{let e=class extends M{constructor(e=null,t,n,i){super(),this.localeId=i,this._SCRIPT_ID="agmGoogleMapsApiScript",this.callbackName="agmLazyMapsAPILoader",this._config=e||{},this._windowRef=t,this._documentRef=n}load(){const e=this._windowRef.getNativeWindow();if(e.google&&e.google.maps)return Promise.resolve();if(this._scriptLoadingPromise)return this._scriptLoadingPromise;const t=this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);if(t)return this._assignScriptLoadingPromise(t),this._scriptLoadingPromise;const n=this._documentRef.getNativeDocument().createElement("script");return n.type="text/javascript",n.async=!0,n.defer=!0,n.id=this._SCRIPT_ID,n.src=this._getScriptSrc(this.callbackName),this._assignScriptLoadingPromise(n),this._documentRef.getNativeDocument().body.appendChild(n),this._scriptLoadingPromise}_assignScriptLoadingPromise(e){this._scriptLoadingPromise=new Promise((t,n)=>{this._windowRef.getNativeWindow()[this.callbackName]=()=>{t()},e.onerror=e=>{n(e)}})}_getScriptSrc(e){let t;switch(this._config&&this._config.protocol||ie.HTTPS){case ie.AUTO:t="";break;case ie.HTTP:t="http:";break;case ie.HTTPS:t="https:"}const n={v:this._config.apiVersion||"quarterly",callback:e,key:this._config.apiKey,client:this._config.clientId,channel:this._config.channel,libraries:this._config.libraries,region:this._config.region,language:this._config.language||"en-US"!==this.localeId?this.localeId:null};return`${t}//${this._config.hostAndPath||"maps.googleapis.com/maps/api/js"}?${Object.keys(n).filter(e=>null!=n[e]).filter(e=>!Array.isArray(n[e])||Array.isArray(n[e])&&n[e].length>0).map(e=>{let t=n[e];return Array.isArray(t)?{key:e,value:t.join(",")}:{key:e,value:n[e]}}).map(e=>`${e.key}=${e.value}`).join("&")}`}};return e.\u0275fac=function(t){return new(t||e)(s["\u0275\u0275inject"](se,8),s["\u0275\u0275inject"](ee),s["\u0275\u0275inject"](te),s["\u0275\u0275inject"](s.LOCALE_ID))},e.\u0275prov=s["\u0275\u0275defineInjectable"]({token:e,factory:function(t){return e.\u0275fac(t)}}),e})();var oe;let ae=(()=>{let e=oe=class{static forRoot(e){return{ngModule:oe,providers:[...ne,{provide:M,useClass:re},{provide:se,useValue:e}]}}};return e.\u0275mod=s["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=s["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)}}),e})();const le=["map"];let he=(()=>{class e{constructor(){this.lat=-33.4855814,this.lng=146.4032773,this.zoom=8,this.styles=[{featureType:"all",stylers:[{saturation:-100}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{hue:"#2ECC71"},{saturation:50}]},{featureType:"poi.business",elementType:"labels",stylers:[{visibility:"off"}]}]}ngOnInit(){this.map.triggerResize()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s["\u0275\u0275defineComponent"]({type:e,selectors:[["app-fullscreen"]],viewQuery:function(e,t){var n;1&e&&s["\u0275\u0275viewQuery"](le,!0),2&e&&s["\u0275\u0275queryRefresh"](n=s["\u0275\u0275loadQuery"]())&&(t.map=n.first)},decls:2,vars:4,consts:[["id","sebm-map",3,"latitude","longitude","zoom","styles"],["map",""]],template:function(e,t){1&e&&s["\u0275\u0275element"](0,"agm-map",0,1),2&e&&s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng)("zoom",t.zoom)("styles",t.styles)},directives:[$],styles:["[_nghost-%COMP%]{padding:0!important;height:100%}agm-map[_ngcontent-%COMP%]{width:100%;height:calc(100vh - 3.5rem);display:block}"]}),e})();const ue=[{path:"",children:[{path:"google",component:(()=>{class e{constructor(){this.lat=-34.397,this.lng=150.644,this.latA=-34.754764,this.lngA=149.736246,this.zoom=8,this.styles=[{featureType:"all",stylers:[{saturation:-80}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{hue:"#00ffee"},{saturation:50}]},{featureType:"poi.business",elementType:"labels",stylers:[{visibility:"off"}]}]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s["\u0275\u0275defineComponent"]({type:e,selectors:[["app-google"]],decls:34,vars:25,consts:[[1,"row"],[1,"col-md-6"],[1,"card"],[1,"card-header","no-shadow"],[1,"card-body","p-0"],[3,"latitude","longitude","zoom"],[3,"latitude","longitude","zoom","styles"],[3,"latitude","longitude"],[3,"latitude","longitude","zoom","disableDefaultUI","zoomControl"]],template:function(e,t){1&e&&(s["\u0275\u0275elementStart"](0,"div",0),s["\u0275\u0275elementStart"](1,"div",1),s["\u0275\u0275elementStart"](2,"div",2),s["\u0275\u0275elementStart"](3,"div",3),s["\u0275\u0275text"](4,"Basic Map"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](5,"div",4),s["\u0275\u0275element"](6,"agm-map",5),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](7,"div",1),s["\u0275\u0275elementStart"](8,"div",2),s["\u0275\u0275elementStart"](9,"div",3),s["\u0275\u0275text"](10,"Styled Map"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](11,"div",4),s["\u0275\u0275element"](12,"agm-map",6),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](13,"div",0),s["\u0275\u0275elementStart"](14,"div",1),s["\u0275\u0275elementStart"](15,"div",2),s["\u0275\u0275elementStart"](16,"div",3),s["\u0275\u0275text"](17,"Polylines"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](18,"div",4),s["\u0275\u0275elementStart"](19,"agm-map",5),s["\u0275\u0275element"](20,"agm-marker",7),s["\u0275\u0275element"](21,"agm-marker",7),s["\u0275\u0275elementStart"](22,"agm-polyline"),s["\u0275\u0275element"](23,"agm-polyline-point",7),s["\u0275\u0275element"](24,"agm-polyline-point",7),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](25,"div",1),s["\u0275\u0275elementStart"](26,"div",2),s["\u0275\u0275elementStart"](27,"div",3),s["\u0275\u0275text"](28,"Info Window"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementStart"](29,"div",4),s["\u0275\u0275elementStart"](30,"agm-map",8),s["\u0275\u0275elementStart"](31,"agm-marker",7),s["\u0275\u0275elementStart"](32,"agm-info-window"),s["\u0275\u0275text"](33,"InfoWindow content"),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"](),s["\u0275\u0275elementEnd"]()),2&e&&(s["\u0275\u0275advance"](6),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng)("zoom",t.zoom),s["\u0275\u0275advance"](6),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng)("zoom",t.zoom)("styles",t.styles),s["\u0275\u0275advance"](7),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng)("zoom",t.zoom),s["\u0275\u0275advance"](1),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng),s["\u0275\u0275advance"](1),s["\u0275\u0275property"]("latitude",t.latA)("longitude",t.lngA),s["\u0275\u0275advance"](2),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng),s["\u0275\u0275advance"](1),s["\u0275\u0275property"]("latitude",t.latA)("longitude",t.lngA),s["\u0275\u0275advance"](6),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng)("zoom",t.zoom)("disableDefaultUI",!1)("zoomControl",!1),s["\u0275\u0275advance"](1),s["\u0275\u0275property"]("latitude",t.lat)("longitude",t.lng))},directives:[$,H,Y,J,D],styles:["agm-map[_ngcontent-%COMP%]{width:100%;height:350px;display:flex}"]}),e})(),data:{heading:"Google Maps"}},{path:"fullscreen",component:he,data:{heading:"Full Page Map",removeFooter:!0,mapHeader:!0}}]}];var ce=n("tyNb");let de=(()=>{class e{}return e.\u0275mod=s["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=s["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[k.c,ce.i.forChild(ue),ae.forRoot({apiKey:"YOUR_GOOGLE_API_KEY"})]]}),e})()}}]);